{"name":"Verifying getting List of Books object by Author id and Genre id with GET method","status":"failed","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"List is empty expected [false] but found [true]","trace":"java.lang.AssertionError: List is empty expected [false] but found [true]\r\n\tat org.testng.Assert.fail(Assert.java:99)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1037)\r\n\tat org.testng.Assert.assertFalse(Assert.java:67)\r\n\tat utils.Validator.validateListIsEmpty(Validator.java:71)\r\n\tat BookTest.verifyGetBooksByAuthorIdGenreIdGetRequest(BookTest.java:108)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)\r\n\tat org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)\r\n\tat org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)\r\n\tat org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)\r\n\tat org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)\r\n\tat org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)\r\n\tat java.util.ArrayList.forEach(ArrayList.java:1257)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:794)\r\n\tat org.testng.TestRunner.run(TestRunner.java:596)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:377)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:276)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1134)\r\n\tat org.testng.TestNG.runSuites(TestNG.java:1063)\r\n\tat org.testng.TestNG.run(TestNG.java:1031)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n"},"stage":"finished","steps":[{"name":"Get all Books of special Author in special Genre.","status":"passed","stage":"finished","steps":[],"attachments":[{"name":"My attachment","source":"47287925-22be-4335-a10b-d0ca52d3a68c-attachment.txt","type":"text/plain"},{"name":"sendRequest","source":"2a14afc0-9dbd-4205-943d-db046ad07c5e-attachment"}],"parameters":[{"name":"options","value":"entity.ListOptions@1a2e0d57"},{"name":"authorId","value":"37"},{"name":"genreId","value":"644"}],"start":1629229619288,"stop":1629229622761},{"name":"Validate status code for received response.","status":"passed","stage":"finished","steps":[],"attachments":[],"parameters":[{"name":"baseResponse","value":"response.BaseResponse@332fa1c"},{"name":"expectedStatusCode","value":"200"}],"start":1629229622769,"stop":1629229622774},{"name":"Return actual Book List from response.","status":"passed","stage":"finished","steps":[],"attachments":[],"parameters":[{"name":"baseResponse","value":"response.BaseResponse@332fa1c"}],"start":1629229657091,"stop":1629229728042}],"attachments":[],"parameters":[{"name":"arg1","value":"{\"genreDescription\":\"Id voluptatibus qui ullam omnis laboriosam maxime laudantium. Vel aut dolorem dolorem facilis officiis. Voluptate impedit repellendus iure enim. Modi in sed alias eum. Eaque sunt nihil rerum.\", \"genreId\":644, \"genreName\":\"Metafiction\"}"},{"name":"arg0","value":"{\"authorDescription\":\"Neque natus sequi. Sunt molestiae quia numquam qui qui quasi ipsa. Vel ea iusto assumenda voluptatem eos qui. Qui excepturi dolor vitae ea et repudiandae. Voluptas mollitia vero autem minima unde commodi sint.\", \"authorId\":37, \"authorName\":{\"first\":\"Alexandro\", \"second\":\"Kris\"}, \"birth\":{\"city\":\"Doylechester\", \"country\":\"Venezuela\", \"date\":\"1930-09-19\"}, \"nationality\":\"Turkish\"}"}],"start":1629229619254,"stop":1629229728056,"uuid":"7d9f6287-7119-424a-ae4d-0ac3734bfe36","historyId":"9182303c7337b96b14988b9c71528a49","fullName":"BookTest.verifyGetBooksByAuthorIdGenreIdGetRequest","labels":[{"name":"package","value":"BookTest"},{"name":"testClass","value":"BookTest"},{"name":"testMethod","value":"verifyGetBooksByAuthorIdGenreIdGetRequest"},{"name":"parentSuite","value":"book_tests_in_groups"},{"name":"suite","value":"book_tests_without_precondition"},{"name":"subSuite","value":"BookTest"},{"name":"host","value":"NATA-PC"},{"name":"thread","value":"19684@NATA-PC.main(1)"},{"name":"framework","value":"testng"},{"name":"language","value":"java"},{"name":"feature","value":"Book api tests"}],"links":[]}